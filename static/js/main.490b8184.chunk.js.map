{"version":3,"sources":["reducers/weatherReducer.js","reducers/rootReducer.js","types/weatherTypes.js","store/store.js","common/NotFound/Home/Home.js","common/Input/Input.js","common/Button/Button.js","containers/SearchInputContainer.js","components/Card/CardHeader/CardHeader.js","helpers/icons.js","components/Card/CardContent/CardContent.js","common/Spinner/Spinner.js","common/NotFound/NotFound.js","components/Card/Card.js","components/LinkedCard/LinkedCard.js","actions/weatherActions.js","containers/CardContainer.js","components/Header/Header.js","containers/HeaderContainer.js","common/Backdrop/Backdrop.js","components/ManagementModal/ManagementModal.js","containers/ManagementModalContainer.js","App.js","index.js"],"names":["initialState","weather","fetchRequestCount","linkedCities","linkedCitiesWeather","manegamentModalIsOpen","isError","reducers","combineReducers","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","process","filter","Boolean","store","createStore","rootReducer","applyMiddleware","Home","className","icon","faSun","Input","id","onChange","name","value","placeholder","autoComplete","classNames","cx","defaultProps","Button","children","onClick","disabled","btnType","SearchInputContainer","useState","setValue","history","useHistory","onSubmit","e","preventDefault","push","target","faSearch","CardHeader","city","country","unixDate","moment","unix","format","icons","faMoon","faCloudSun","faCloudMoon","faCloud","faCloudShowersHeavy","faCloudSunRain","faCloudMoonRain","faBolt","faSnowflake","faBars","CardContent","temperature","description","wind","humidity","Math","floor","Spinner","wrapperClassName","NotFound","faSadTear","Card","isFetching","date","temp","LinkedCard","fetchWeather","dispatch","a","axios","get","res","data","skyInfo","result","sys","main","dt","speed","fetchLinkedWeather","updateLinkedCities","cities","toggleManagementModal","CardContainer","weatherActions","useParams","useEffect","Promise","all","map","linkedCity","linkedWeather","key","connect","bindActionCreators","weatherActionCreators","Header","handleManagementModal","to","role","tabIndex","Backdrop","show","ManagementModal","onHide","first","second","third","useReducer","newState","values","setValues","ManagementModalContainer","updatedCities","Object","App","basename","HeaderContainer","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.490b8184.chunk.js","sourcesContent":["import * as types from '../types/weatherTypes';\n\nconst initialState = {\n  weather: {},\n  fetchRequestCount: 0,\n  linkedCities: ['Wroclaw', 'Gdansk', 'Krakow'],\n  linkedCitiesWeather: [],\n  manegamentModalIsOpen: false,\n  isError: false,\n};\n\nexport const weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_WEATHER_REQUEST:\n      return {\n        ...state,\n        linkedCitiesWeather: [],\n        isError: false,\n        fetchRequestCount: state.fetchRequestCount + 1,\n      };\n    case types.FETCH_WEATHER_SUCCESS:\n      return {\n        ...state,\n        weather: action.payload,\n        fetchRequestCount: state.fetchRequestCount - 1,\n      };\n    case types.FETCH_WEATHER_FAILURE:\n      return {\n        ...state,\n        fetchRequestCount: state.fetchRequestCount - 1,\n        isError: true,\n      };\n    case types.FETCH_LINKED_WEATHER_REQUEST:\n      return {\n        ...state,\n        fetchRequestCount: state.fetchRequestCount + 1,\n      };\n    case types.FETCH_LINKED_WEATHER_SUCCESS:\n      return {\n        ...state,\n        linkedCitiesWeather: [...state.linkedCitiesWeather, action.payload],\n        fetchRequestCount: state.fetchRequestCount - 1,\n      };\n    case types.FETCH_LINKED_WEATHER_FAILURE:\n      return {\n        ...state,\n        fetchRequestCount: state.fetchRequestCount - 1,\n      };\n    case types.UPDATE_LINKED_CITIES:\n      return {\n        ...state,\n        linkedCities: action.payload,\n      };\n    case types.TOGGLE_MANAGEMENT_MODAL:\n      return {\n        ...state,\n        manegamentModalIsOpen: !state.manegamentModalIsOpen,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { weatherReducer } from './weatherReducer';\n\nconst reducers = combineReducers({\n  weather: weatherReducer,\n});\n\nexport default reducers;\n","export const FETCH_WEATHER_REQUEST = 'FETCH_WEATHER_REQUEST';\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS';\nexport const FETCH_WEATHER_FAILURE = 'FETCH_WEATHER_FAILURE';\n\nexport const FETCH_LINKED_WEATHER_REQUEST = 'FETCH_LINKED_WEATHER_REQUEST';\nexport const FETCH_LINKED_WEATHER_SUCCESS = 'FETCH_LINKED_WEATHER_SUCCESS';\nexport const FETCH_LINKED_WEATHER_FAILURE = 'FETCH_LINKED_WEATHER_FAILURE';\n\nexport const UPDATE_LINKED_CITIES = 'UPDATE_LINKED_CITIES';\n\nexport const TOGGLE_MANAGEMENT_MODAL = 'TOGGLE_MANAGEMENT_MODAL';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst development = process.env.NODE_ENV === 'development';\n\nconst middleware = [thunk, development && logger].filter(Boolean);\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n\nexport default store;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <div className=\"home__icon\">\n        <FontAwesomeIcon icon={faSun} />\n      </div>\n      <div className=\"home__title\">find out the temperature and more...</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst Input = ({ id, onChange, name, type, value, placeholder, autoComplete, className }) => {\n  const classNames = cx('input', { [className]: className });\n  return (\n    <>\n      <input\n        className={classNames}\n        id={id}\n        name={name}\n        type={type}\n        autoComplete={autoComplete}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n    </>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  autoComplete: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  className: '',\n  placeholder: '',\n  autoComplete: 'off',\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Button = ({ children, className, onClick, disabled, type, btnType, icon }) => {\n  const classNames = cx(`btn btn__${btnType}`, { [className]: className });\n  /* eslint-disable react/button-has-type */\n  return (\n    <button className={classNames} type={type} disabled={disabled} onClick={onClick}>\n      {icon && (\n        <span className=\"btn__icon\">\n          <FontAwesomeIcon icon={icon} />\n        </span>\n      )}\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  btnType: PropTypes.string,\n  type: PropTypes.string,\n  icon: PropTypes.shape({\n    prefix: PropTypes.string,\n    iconName: PropTypes.string,\n    icon: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.array, PropTypes.number, PropTypes.string]),\n    ),\n  }),\n};\n\nButton.defaultProps = {\n  className: '',\n  disabled: false,\n  type: 'button',\n  btnType: 'primary',\n  icon: null,\n  onClick: () => {},\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Input from '../common/Input/Input';\nimport Button from '../common/Button/Button';\n\nconst SearchInputContainer = () => {\n  const [value, setValue] = useState('');\n  const history = useHistory();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    history.push(`/${value}`);\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"form\">\n        <Input\n          className=\"form__input\"\n          id=\"search\"\n          name=\"search\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          placeholder=\"City...\"\n        />\n        <Button className=\"form__button\" btnType=\"primary\" type=\"submit\" icon={faSearch}>\n          Search\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchInputContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst CardHeader = ({ city, country, unixDate }) => {\n  return (\n    <div className=\"card-header\">\n      <h2 className=\"card-header__title\">\n        {city}, {country}\n      </h2>\n      <p className=\"card-header__subtitle\">{moment.unix(unixDate).format('dddd, DD MMMM')}</p>\n    </div>\n  );\n};\n\nCardHeader.propTypes = {\n  city: PropTypes.string,\n  country: PropTypes.string,\n  unixDate: PropTypes.number,\n};\n\nCardHeader.defaultProps = {\n  city: null,\n  country: null,\n  unixDate: null,\n};\n\nexport default CardHeader;\n","import {\n  faSun,\n  faMoon,\n  faCloudSun,\n  faCloudMoon,\n  faCloud,\n  faCloudShowersHeavy,\n  faCloudSunRain,\n  faCloudMoonRain,\n  faBolt,\n  faSnowflake,\n  faBars,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport const icons = {\n  '01d': faSun,\n  '01n': faMoon,\n  '02d': faCloudSun,\n  '02n': faCloudMoon,\n  '03d': faCloud,\n  '03n': faCloud,\n  '04d': faCloud,\n  '04n': faCloud,\n  '09d': faCloudShowersHeavy,\n  '09n': faCloudShowersHeavy,\n  '10d': faCloudSunRain,\n  '10n': faCloudMoonRain,\n  '11d': faBolt,\n  '11n': faBolt,\n  '13d': faSnowflake,\n  '13n': faSnowflake,\n  '50d': faBars,\n  '50n': faBars,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { icons } from '../../../helpers/icons';\n\nconst CardContent = ({ icon, temperature, description, wind, humidity }) => {\n  return (\n    <section className=\"content\">\n      <div className=\"content__section\">\n        <span className=\"content__icon\">\n          <FontAwesomeIcon icon={icons[icon]} />\n        </span>\n        <div>\n          <p className=\"content__temperature\">{Math.floor(temperature)} &#176;</p>\n          <p className=\"content__description\">{description}</p>\n          <div className=\"content__hr\" />\n\n          <p className=\"content__wind\">Wind: {Math.floor(wind)} m/s</p>\n          <p className=\"content__humidity\">Humidity: {Math.floor(humidity)}&#x25;</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nCardContent.propTypes = {\n  description: PropTypes.string,\n  icon: PropTypes.string,\n  wind: PropTypes.number,\n  humidity: PropTypes.number,\n  temperature: PropTypes.number,\n};\n\nCardContent.defaultProps = {\n  description: '',\n  icon: '01d',\n  wind: null,\n  humidity: null,\n  temperature: null,\n};\n\nexport default CardContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Spinner = ({ wrapperClassName }) => {\n  return (\n    <div className={wrapperClassName}>\n      <div className=\"spinner\" />\n    </div>\n  );\n};\n\nSpinner.propTypes = {\n  wrapperClassName: PropTypes.string,\n};\n\nSpinner.defaultProps = {\n  wrapperClassName: '',\n};\n\nexport default Spinner;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSadTear } from '@fortawesome/free-solid-svg-icons';\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <FontAwesomeIcon icon={faSadTear} />\n      <h3 className=\"not-found__title\">City not found...</h3>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardHeader from './CardHeader/CardHeader';\nimport CardContent from './CardContent/CardContent';\nimport Spinner from '../../common/Spinner/Spinner';\nimport NotFound from '../../common/NotFound/NotFound';\n\nconst Card = ({ weather, isFetching, isError }) => {\n  if (isFetching) {\n    return <Spinner wrapperClassName=\"card\" />;\n  }\n  return (\n    <>\n      {isError ? (\n        <NotFound />\n      ) : (\n        <>\n          <CardHeader city={weather.city} country={weather.country} unixDate={weather.date} />\n          <section className=\"card\">\n            <CardContent\n              icon={weather.icon}\n              wind={weather.wind}\n              humidity={weather.humidity}\n              temperature={weather.temp}\n              description={weather.description}\n            />\n          </section>\n        </>\n      )}\n    </>\n  );\n};\n\nCard.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.number,\n    icon: PropTypes.string,\n    temp: PropTypes.number,\n    wind: PropTypes.number,\n    humidity: PropTypes.number,\n    description: PropTypes.string,\n  }).isRequired,\n  isError: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { icons } from '../../helpers/icons';\n\nconst LinkedCard = ({ city, country, temperature, icon }) => {\n  return (\n    <div className=\"linked-card\">\n      <h4 className=\"linked-card__title\">\n        {city}, {country}\n      </h4>\n      <div className=\"linked-card__section\">\n        <span className=\"linked-card__icon\">\n          <FontAwesomeIcon icon={icons[icon]} />\n        </span>\n        <p className=\"linked-card__temperature\">{Math.floor(temperature)} &#176;</p>\n      </div>\n    </div>\n  );\n};\n\nLinkedCard.propTypes = {\n  city: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  temperature: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default LinkedCard;\n","import axios from 'axios';\nimport * as types from '../types/weatherTypes';\n\nconst fetchWeatherRequest = () => ({\n  type: types.FETCH_WEATHER_REQUEST,\n});\n\nconst fetchWeatherSuccess = weather => ({\n  type: types.FETCH_WEATHER_SUCCESS,\n  payload: weather,\n});\n\nconst fetchWeatherFailure = () => ({\n  type: types.FETCH_WEATHER_FAILURE,\n});\n\nexport const fetchWeather = city => async dispatch => {\n  dispatch(fetchWeatherRequest());\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_WEATHER_URL}?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`,\n    );\n    const [skyInfo] = res.data.weather;\n    const result = {\n      id: res.data.id,\n      city: res.data.name,\n      country: res.data.sys.country,\n      temp: res.data.main.temp,\n      date: res.data.dt,\n      wind: res.data.wind.speed,\n      humidity: res.data.main.humidity,\n      icon: skyInfo.icon,\n      description: skyInfo.description,\n    };\n    return dispatch(fetchWeatherSuccess(result));\n  } catch (error) {\n    return dispatch(fetchWeatherFailure());\n  }\n};\n\nconst fetchLinkedWeatherRequest = () => ({\n  type: types.FETCH_LINKED_WEATHER_REQUEST,\n});\n\nconst fetchLinkedWeatherSuccess = weather => ({\n  type: types.FETCH_LINKED_WEATHER_SUCCESS,\n  payload: weather,\n});\n\nconst fetchLinkedWeatherFailure = () => ({\n  type: types.FETCH_LINKED_WEATHER_FAILURE,\n});\n\nexport const fetchLinkedWeather = city => async dispatch => {\n  dispatch(fetchLinkedWeatherRequest());\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_WEATHER_URL}?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`,\n    );\n    const [skyInfo] = res.data.weather;\n    const result = {\n      id: res.data.id,\n      city: res.data.name,\n      country: res.data.sys.country,\n      temp: res.data.main.temp,\n      icon: skyInfo.icon,\n      description: skyInfo.description,\n    };\n    return dispatch(fetchLinkedWeatherSuccess(result));\n  } catch (error) {\n    return dispatch(fetchLinkedWeatherFailure());\n  }\n};\n\nexport const updateLinkedCities = cities => ({\n  type: types.UPDATE_LINKED_CITIES,\n  payload: cities,\n});\n\nexport const toggleManagementModal = () => ({\n  type: types.TOGGLE_MANAGEMENT_MODAL,\n});\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Card from '../components/Card/Card';\nimport LinkedCard from '../components/LinkedCard/LinkedCard';\n\nimport * as weatherActionCreators from '../actions/weatherActions';\n\nconst CardContainer = ({\n  weather,\n  isError,\n  weatherActions,\n  isFetching,\n  linkedCities,\n  linkedCitiesWeather,\n}) => {\n  const { city } = useParams();\n\n  const fetchWeather = () =>\n    Promise.all([\n      weatherActions.fetchWeather(city),\n      ...linkedCities.map(linkedCity => weatherActions.fetchLinkedWeather(linkedCity)),\n    ]);\n\n  useEffect(() => {\n    fetchWeather();\n    // eslint-disable-next-line\n  }, [city]);\n\n  return (\n    <>\n      <Card weather={weather} isFetching={isFetching} isError={isError} />\n      {linkedCitiesWeather.map(linkedWeather => (\n        <LinkedCard\n          key={linkedWeather.id}\n          icon={linkedWeather.icon}\n          city={linkedWeather.city}\n          country={linkedWeather.country}\n          temperature={linkedWeather.temp}\n        />\n      ))}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather.weather,\n  linkedCities: state.weather.linkedCities,\n  linkedCitiesWeather: state.weather.linkedCitiesWeather,\n  isFetching: state.weather.fetchRequestCount > 0,\n  isError: state.weather.isError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  weatherActions: bindActionCreators(weatherActionCreators, dispatch),\n});\n\nCardContainer.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.number,\n    icon: PropTypes.string,\n    temp: PropTypes.number,\n    wind: PropTypes.number,\n    humidity: PropTypes.number,\n    description: PropTypes.string,\n  }).isRequired,\n  isFetching: PropTypes.bool,\n  isError: PropTypes.bool.isRequired,\n  linkedCities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  linkedCitiesWeather: PropTypes.arrayOf(PropTypes.object).isRequired,\n  weatherActions: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nCardContainer.defaultProps = {\n  isFetching: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardContainer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ handleManagementModal }) => {\n  return (\n    <header className=\"header\">\n      <nav className=\"header__nav\">\n        <h1>\n          <Link className=\"header__title\" to=\"/\">\n            weather app\n          </Link>\n        </h1>\n        {/* eslint-disable-next-line  */}\n        <a className=\"header__button\" role=\"button\" onClick={handleManagementModal} tabIndex={0}>\n          Manage\n        </a>\n      </nav>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  handleManagementModal: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as weatherActionCreators from '../actions/weatherActions';\nimport Header from '../components/Header/Header';\n\nconst HeaderContailer = ({ weatherActions }) => {\n  return <Header handleManagementModal={weatherActions.toggleManagementModal} />;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  weatherActions: bindActionCreators(weatherActionCreators, dispatch),\n});\n\nHeaderContailer.propTypes = {\n  weatherActions: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(HeaderContailer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Backdrop = ({ show, onClick }) =>\n  show ? <div className=\"backdrop\" onClick={onClick} /> : null;\n\nBackdrop.propTypes = {\n  show: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nBackdrop.defaultProps = {\n  show: false,\n  onClick: () => {},\n};\n\nexport default Backdrop;\n","import React, { useReducer } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Backdrop from '../../common/Backdrop/Backdrop';\nimport Button from '../../common/Button/Button';\nimport Input from '../../common/Input/Input';\n\nconst ManagementModal = ({ linkedCities, show, onSubmit, onHide }) => {\n  const [first, second, third] = linkedCities;\n  const [values, setValues] = useReducer((state, newState) => ({ ...state, ...newState }), {\n    first,\n    second,\n    third,\n  });\n\n  const classNames = cx('modal', { 'modal--is-open': show });\n\n  return (\n    <>\n      <Backdrop show={show} onClick={onHide} />\n      <div className={classNames}>\n        <h4 className=\"modal__title\">choose linked cities</h4>\n        <form onSubmit={e => onSubmit(e, values)}>\n          <Input\n            className=\"modal__input\"\n            onChange={e => setValues({ first: e.target.value })}\n            id=\"firstCity\"\n            name=\"firstCity\"\n            value={values.first}\n          />\n          <Input\n            className=\"modal__input\"\n            onChange={e => setValues({ second: e.target.value })}\n            id=\"secondCity\"\n            name=\"secondCity\"\n            value={values.second}\n          />\n          <Input\n            className=\"modal__input\"\n            onChange={e => setValues({ third: e.target.value })}\n            id=\"thirdCity\"\n            name=\"thirdCity\"\n            value={values.third}\n          />\n          <div className=\"modal__buttons\">\n            <Button btnType=\"default\" onClick={onHide}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" className=\"modal__button--save\">\n              Save\n            </Button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\nManagementModal.propTypes = {\n  linkedCities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  show: PropTypes.bool,\n  onHide: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nManagementModal.defaultProps = {\n  show: false,\n};\n\nexport default ManagementModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport ManagementModal from '../components/ManagementModal/ManagementModal';\n\nimport * as weatherActionCreators from '../actions/weatherActions';\n\nconst ManagementModalContainer = ({ linkedCities, weatherActions, manegamentModalIsOpen }) => {\n  const onSubmit = (e, values) => {\n    e.preventDefault();\n    const updatedCities = Object.values(values);\n    weatherActions.updateLinkedCities(updatedCities);\n    weatherActions.toggleManagementModal();\n  };\n\n  return (\n    <ManagementModal\n      onSubmit={onSubmit}\n      linkedCities={linkedCities}\n      show={manegamentModalIsOpen}\n      onHide={weatherActions.toggleManagementModal}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  manegamentModalIsOpen: state.weather.manegamentModalIsOpen,\n  linkedCities: state.weather.linkedCities,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  weatherActions: bindActionCreators(weatherActionCreators, dispatch),\n});\n\nManagementModalContainer.propTypes = {\n  manegamentModalIsOpen: PropTypes.bool,\n  linkedCities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  weatherActions: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nManagementModalContainer.defaultProps = {\n  manegamentModalIsOpen: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagementModalContainer);\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Home from './common/NotFound/Home/Home';\nimport SearchInputContainer from './containers/SearchInputContainer';\nimport CardContainer from './containers/CardContainer';\nimport HeaderContainer from './containers/HeaderContainer';\nimport ManagementModalContainer from './containers/ManagementModalContainer';\n\nconst App = () => (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <ManagementModalContainer />\n      <HeaderContainer />\n      <SearchInputContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:city\" component={CardContainer} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('weather-app'),\n);\n"],"sourceRoot":""}